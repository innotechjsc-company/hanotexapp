import React from "react";
import { Modal, Form, Input, InputNumber, Typography, Space, Divider } from "antd";
import { DollarOutlined } from "@ant-design/icons";

const { Text, Paragraph } = Typography;
const { TextArea } = Input;

export interface OfferFormData {
  price: number;
  content: string;
  message: string;
}

interface OfferModalProps {
  open: boolean;
  onOk: (offerData: OfferFormData) => Promise<void>;
  onCancel: () => void;
  confirmLoading: boolean;
  uploadingFiles: boolean;
}

export const OfferModal: React.FC<OfferModalProps> = ({
  open,
  onOk,
  onCancel,
  confirmLoading,
  uploadingFiles,
}) => {
  const [form] = Form.useForm();

  const handleSubmit = async () => {
    try {
      const values = await form.validateFields();
      await onOk(values);
      form.resetFields();
    } catch (error) {
      console.error("Form validation failed:", error);
    }
  };

  const handleCancel = () => {
    form.resetFields();
    onCancel();
  };

  return (
    <Modal
      title={
        <Space>
          <DollarOutlined />
          <span>G·ª≠i ƒë·ªÅ xu·∫•t ƒë·∫ßu t∆∞</span>
        </Space>
      }
      open={open}
      onOk={handleSubmit}
      onCancel={handleCancel}
      confirmLoading={confirmLoading || uploadingFiles}
      okText="G·ª≠i ƒë·ªÅ xu·∫•t"
      cancelText="H·ªßy"
      width={600}
      maskClosable={false}
    >
      <div className="py-4">
        <div className="bg-blue-50 p-3 rounded border border-blue-200 mb-4">
          <Text type="secondary" className="text-sm">
            üí° <strong>L∆∞u √Ω:</strong> ƒê·ªÅ xu·∫•t ƒë·∫ßu t∆∞ s·∫Ω ƒë∆∞·ª£c g·ª≠i k√®m theo tin nh·∫Øn ƒë√†m ph√°n. 
            Ch·ªß d·ª± √°n s·∫Ω c√≥ th·ªÉ ch·∫•p nh·∫≠n ho·∫∑c t·ª´ ch·ªëi ƒë·ªÅ xu·∫•t c·ªßa b·∫°n.
          </Text>
        </div>

        <Form
          form={form}
          layout="vertical"
          requiredMark={false}
        >
          <Form.Item
            name="price"
            label="S·ªë ti·ªÅn ƒë·∫ßu t∆∞ (VND)"
            rules={[
              { required: true, message: "Vui l√≤ng nh·∫≠p s·ªë ti·ªÅn ƒë·∫ßu t∆∞" },
              { type: "number", min: 1, message: "S·ªë ti·ªÅn ph·∫£i l·ªõn h∆°n 0" },
            ]}
          >
            <InputNumber
              placeholder="Nh·∫≠p s·ªë ti·ªÅn ƒë·∫ßu t∆∞"
              className="w-full"
              formatter={(value) =>
                `${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, ",")
              }
              parser={(value) => value!.replace(/\$\s?|(,*)/g, "")}
              addonAfter="VND"
            />
          </Form.Item>

          <Form.Item
            name="content"
            label="N·ªôi dung ƒë·ªÅ xu·∫•t"
            rules={[
              { required: true, message: "Vui l√≤ng nh·∫≠p n·ªôi dung ƒë·ªÅ xu·∫•t" },
              { min: 10, message: "N·ªôi dung ƒë·ªÅ xu·∫•t ph·∫£i c√≥ √≠t nh·∫•t 10 k√Ω t·ª±" },
            ]}
          >
            <TextArea
              placeholder="M√¥ t·∫£ chi ti·∫øt v·ªÅ ƒë·ªÅ xu·∫•t ƒë·∫ßu t∆∞ c·ªßa b·∫°n..."
              rows={4}
              showCount
              maxLength={500}
            />
          </Form.Item>

          <Form.Item
            name="message"
            label="Tin nh·∫Øn k√®m theo"
            rules={[
              { required: true, message: "Vui l√≤ng nh·∫≠p tin nh·∫Øn k√®m theo" },
            ]}
          >
            <TextArea
              placeholder="Tin nh·∫Øn g·ª≠i k√®m v·ªõi ƒë·ªÅ xu·∫•t ƒë·∫ßu t∆∞..."
              rows={3}
              showCount
              maxLength={300}
            />
          </Form.Item>
        </Form>

        <Divider />

        <div className="bg-amber-50 p-3 rounded border border-amber-200">
          <Text type="secondary" className="text-sm">
            ‚ö†Ô∏è <strong>Ch√∫ √Ω:</strong> Sau khi g·ª≠i ƒë·ªÅ xu·∫•t, b·∫°n s·∫Ω kh√¥ng th·ªÉ ch·ªânh s·ª≠a. 
            Vui l√≤ng ki·ªÉm tra k·ªπ th√¥ng tin tr∆∞·ªõc khi g·ª≠i.
          </Text>
        </div>
      </div>
    </Modal>
  );
};
